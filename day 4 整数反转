
/*给出一个最多有32位的有符号整数，你需要将这个整数中每位上的数字进行反转*/
class Solution {
public:
    int reverse(int x) {
        int rev=0;
        while(x!=0){
            int pop=x%10;
            x=x/10;
            if(rev>INT_MAX/10||(rev==INT_MAX/10&&pop>7)) return 0;//一般对pop有要求.符号占去一位，所以MAX=2^31-1(尾号为7)而MIN=-2^31（尾号为8）
            if(rev<INT_MIN/10||(rev==INT_MIN/10&&pop<-8)) return 0; //其实，对于此题，最值的首位为2，所以不用检验pop值。
            rev=rev*10+pop;      
        }
        return rev;
    }
};

//关于int型变量的最大值和最小值的补充知识
int为有符号整型数，在16位编译器上占2字节16位。
对于有符号数，计算机中表达时，最高位约定为符号位，当符号位为0时为正数，符号位为1时为负数。
所以真正表达值的部分是剩余的15位，这15位的范围就是二进制的000 0000 0000 0000到111 1111 1111 1111。
转换成十进制也就是0~32767。
所以，正数的表示范围就是1~32767.
其中有一个特殊的值，就是0值，对于符号位1和0的时候，值都是0，用两个形式表示同一个数无疑是浪费的，符号位为1时的全0，就用来表达-32768了，这也是负数表示的范围比正数多1的原因。
综上，对于任意位的，无论是8位，16位，32位甚至64位的整数类型表示范围的计算公式为：
如总位数为n位，那么有符号数的范围为
-2^(n-1) ~ 2^(n-1)-1
以上文字来源于百度
