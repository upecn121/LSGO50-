class Solution {
public:
    int search(vector<int>& nums, int target) 
    {
        if(nums.size()==0) return -1;
        int min=0;
        int mid;
        int lo=0;
        int hi=nums.size()-1;
        if(nums.size() == 1)
        { //如果只有一个数字，直接判断
            if(nums[0] == target)   return 0;
            else return -1;
        }
        while(lo<=hi)
        {
            mid=lo+(hi-lo)/2;
            if(nums[mid]>nums[0])
                lo=mid+1;
            else
                hi=mid-1;
        }
        if(nums[mid]>nums[mid+1])
            min=mid+1;
        else
            min=mid;
        if(min>0)
        {
            if(target<nums[min]||target>nums[min-1])
                return -1;
            else if(target>=nums[0])
            {
                lo=0;
                hi=min-1;   
            }
            else
            {
                lo=min;
                hi=nums.size()-1;
            }
        }
        else 
        {
            lo=min;
            hi=nums.size()-1; 
        }
        while(lo<=hi)
        {
            mid=lo+(hi-lo)/2;
            if(target==nums[mid])
            return mid;
            if(nums[mid]>target)
                hi=mid-1;
            else
                lo=mid+1;
        }
        return -1;
    }
};
