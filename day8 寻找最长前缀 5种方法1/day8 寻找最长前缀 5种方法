/**编写一个函数来查找字符串数组中的最长公共前缀。

如果不存在公共前缀，返回空字符串 ""。

示例 1:

输入: ["flower","flow","flight"]
输出: "fl"
示例 2:

输入: ["dog","racecar","car"]
输出: ""
解释: 输入不存在公共前缀。
说明:

所有输入只包含小写字母 a-z 。
**/

//方法一 水平扫描法：遍历所有字符串元素，确立最长的公共前缀
class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        if(strs.empty()==1) return "";
        string res=strs[0];
        int i,j;
        for(i=1;i<strs.size();i++)
        {
            for(j=0;j<res.length();j++)
            {
                if(res[j]!=strs[i][j])
                {
                    res.erase(j);
                    break;
                }
            }
        }
        return res;
    }
};
//方法二 优化的水平扫描：对每个字符串元素的同一下标元素进行比较。如果公共前缀比较短，算法的时间会比方法一好，因为方法二不一定会遍历所有字符元素
//方法三 分治字符串数组；将字符串数组分割成多个包含更少元素的字符串数组。迭代某个算法。
//方法四 二分查找长度法：确定字符串数组长度，用二分法来分割长度区间，通过多次排除找出最长公共前缀的长度
//方法五 字典树：我也不懂。以后会懂的。
