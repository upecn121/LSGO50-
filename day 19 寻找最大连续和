
/*
*给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。
*
*示例:

*输入: [-2,1,-3,4,-1,2,1,-5,4],
*输出: 6
*解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。
*
*/

//1.暴力法，穷举所有序列
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int n=nums.size();
        if(n==0) return NULL;
        int max=nums[0];
        for(int i=0;i<n;i++)
        {
            int sum=0;
            for(int j=i;j<n;j++)
            {
                sum+=nums[j];
                if(sum>max) max=sum;
            }
        }
        return max;
    }
};
//2.动态规划法 sum存储当前连续和，ans记录最大连续和。当sum为负数时将sum替换为当前元素。
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int n=nums.size();
        if(n==0) return NULL;
        int ans=INT_MIN;
        int sum=0;
        for(int i=0;i<n;i++)
        {
            if(sum<0) sum=0;
            sum+=nums[i];
            ans=max(sum,ans);
        }
        return ans;
    }
};
