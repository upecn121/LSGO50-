class Solution {
public:
    string multiply(string num1, string num2) {
        int n1=num1.size();
        int n2=num2.size();
        int temp;
        string res(n1+n2,'0');//结果最大会占用n1+n2个数位
        for(int i=n1-1;i>=0;i--){
            for(int j=n2-1;j>=0;j--){
                temp=res[i+j+1]-'0'+(num1[i]-'0')*(num2[j]-'0');//对应位上的数的乘积加上当前位的值
                res[i+j+1]='0'+temp%10;//用temp的个位更新当前位的值
                res[i+j]+=temp/10;//将进位值加入前一位
            }
        }
        for(int i=0;i<n1+n2;i++){//去除首位的0
            if(res[i]!='0')
                return res.substr(i);
        }
        return "0";     
    }
};
